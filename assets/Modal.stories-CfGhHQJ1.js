import{j as o}from"./jsx-runtime-CexXSJP5.js";import{r as p}from"./index-BP8_t0zE.js";import{M as s}from"./Modal-DjE8Gf6o.js";import{B as n}from"./Button-DgKJQOcJ.js";import{F as d}from"./Flex-DfchtKyW.js";import{T as c}from"./Title-NR0nO8_X.js";import"./use-reduced-motion-BEzOJ-bM.js";import"./OptionalPortal-Dz0ZbQ5R.js";import"./index-DJkmxc1E.js";import"./factory-Cmy58O58.js";import"./default-theme-BUmQqxa3.js";import"./use-isomorphic-effect-BPjV9wAK.js";import"./use-merged-ref-DIizHiiB.js";import"./create-safe-context-DdvLfAHk.js";import"./CloseButton-Bf40-Csk.js";import"./get-size-ZIjN6hcg.js";import"./create-vars-resolver-BkjTnGuP.js";import"./polymorphic-factory-DpGZ7QIF.js";import"./UnstyledButton-Bp_jImnG.js";import"./FocusTrap-Qzhi2iHh.js";import"./is-element-CqW86lAY.js";import"./random-id-CCVmTau8.js";import"./Paper-Coa4cW4M.js";import"./Transition-1eDnA5u2.js";import"./tslib.es6-Ytcc2UEA.js";import"./use-id-B6kcI9zl.js";import"./styled-components.browser.esm-Dx2qpfAi.js";import"./theme-DV-fQgRe.js";import"./Button-DQolzjlr.js";import"./Loader-I3UIFO-P.js";const J={title:"Components/ModalComponent",component:s,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{modalContent:{description:"Content to be rendered inside the modal.",control:!1},trigger:{description:"Trigger element to open the modal.",control:!1},isOpen:{description:"Controls whether the modal is open.",control:"boolean"},onClose:{description:"Function to be called when the modal is closed.",action:"closed"},modalWidth:{description:"Size of the modal.",control:"text",defaultValue:"95vw"},modalHeight:{description:"Height of the modal.",control:"text",defaultValue:"90vh"},shouldCloseOnClickOutside:{description:"Determines if the modal should close when clicking outside.",control:"boolean",defaultValue:!0}}},e={render:a=>{const[m,t]=p.useState(!1);return o.jsxs(o.Fragment,{children:[o.jsx(n,{text:"Open Modal",onClick:()=>t(!0)}),o.jsx(s,{...a,modalContent:()=>o.jsxs(d,{direction:"column",mt:200,gap:10,justify:"center",align:"center",children:[o.jsx(c,{order:2,children:"This is the modal content"}),o.jsx(n,{text:"Close Modal",onClick:()=>t(!1)})]}),isOpen:m})]})}};var r,i,l;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: args => {
    const [isModalOpen, setModalOpen] = useState(false);
    return <>\r
        <ButtonComponent text="Open Modal" onClick={() => setModalOpen(true)} />\r
        <ModalComponent {...args} modalContent={() => <Flex direction="column" mt={200} gap={10} justify="center" align="center">\r
              <Title order={2}>This is the modal content</Title>\r
              <ButtonComponent text="Close Modal" onClick={() => setModalOpen(false)} />\r
            </Flex>} isOpen={isModalOpen} />\r
      </>;
  }
}`,...(l=(i=e.parameters)==null?void 0:i.docs)==null?void 0:l.source}}};const K=["DefaultModal"];export{e as DefaultModal,K as __namedExportsOrder,J as default};
