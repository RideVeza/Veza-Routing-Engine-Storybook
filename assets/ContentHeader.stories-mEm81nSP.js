import{j as v}from"./jsx-runtime-CexXSJP5.js";import{G as I}from"./index-B98Pt2jl.js";import{I as S,a as T}from"./index-DUW3t7VM.js";import{M as k,c as H}from"./index-DhrrqPsw.js";import{C as z}from"./ContentHeader-BeoyYu9o.js";import{t as i}from"./theme-DV-fQgRe.js";import{B as D}from"./Button-DgKJQOcJ.js";import"./index-BP8_t0zE.js";import"./iconBase-tVazycLF.js";import"./styled-components.browser.esm-Dx2qpfAi.js";import"./Flex-DfchtKyW.js";import"./factory-Cmy58O58.js";import"./default-theme-BUmQqxa3.js";import"./polymorphic-factory-DpGZ7QIF.js";import"./Title-NR0nO8_X.js";import"./create-vars-resolver-BkjTnGuP.js";import"./Skeleton-C45Pgd_S.js";import"./get-size-ZIjN6hcg.js";import"./Group-uPXshQyq.js";import"./Button-DQolzjlr.js";import"./Loader-I3UIFO-P.js";import"./Transition-1eDnA5u2.js";import"./index-DJkmxc1E.js";import"./use-reduced-motion-BEzOJ-bM.js";import"./UnstyledButton-Bp_jImnG.js";const t={Search:I,Delete:k,Edit:H,Close:S,Save:T},ot={title:"Components/ContentHeader",component:z,parameters:{layout:"fullscreen",backgrounds:{default:"light",values:[{name:"light",value:i.colors.gray[0]}]}},tags:["autodocs"],argTypes:{primaryTitle:{control:"text",description:"Primary title displayed in the header"},secondaryTitle:{control:"text",description:"Secondary title displayed in the header"},renderHeaderButtonComponent:{control:!1,description:"Optional function to render custom buttons in the header"},renderHeaderButtonTab:{control:"text",description:"Tab identifier for conditionally rendering the custom buttons"},activeTab:{control:"text",description:"Currently active tab"},onSecondaryClick:{action:"clicked",description:"Function called when the secondary button is clicked"},onPrimaryClick:{action:"clicked",description:"Function called when the primary button is clicked"},shouldInvertTitles:{control:"boolean",description:"Determines if the titles should be inverted"},primaryButtonText:{control:"text",description:"Text for the primary button"},secondaryButtonText:{control:"text",description:"Text for the secondary button"},shouldInvertButtons:{control:"boolean",description:"Determines if the buttons should be inverted"},isLoading:{control:"boolean",description:"Shows a loading skeleton instead of the titles and buttons"},primaryButtonIcon:{control:{type:"select"},options:Object.keys(t),mapping:t,description:"Icon to display inside the primary button"},secondaryButtonIcon:{control:{type:"select"},options:Object.keys(t),mapping:t,description:"Icon to display inside the secondary button"},secondaryButtonColor:{control:"color",description:"Color of the secondary button"},buttonsFontSize:{control:"text",description:"Font size for both primary and secondary buttons"},buttonsIconSize:{control:"number",description:"Size of the icons used in the buttons"},buttonsPadding:{control:"text",description:"Padding to apply to both primary and secondary buttons"},primaryButtonVariant:{control:{type:"select"},options:["filled","light","outline","subtle"],description:"Variant of the primary button"},headerAlign:{control:{type:"select"},options:["left","center","right"],description:"Alignment of the header content"},hasBorderBottom:{control:"boolean",description:"If true, applies a border at the bottom of the header"}},args:{primaryTitle:"Primary Title",secondaryTitle:"Secondary Title",primaryButtonText:"Save",secondaryButtonText:"Exit",shouldInvertTitles:!1,shouldInvertButtons:!1,isLoading:!1,primaryButtonIcon:t.Save,secondaryButtonIcon:t.Edit,secondaryButtonColor:i.colors.primary[5],buttonsFontSize:"14px",buttonsIconSize:14,buttonsPadding:"4px 8px",primaryButtonVariant:"filled",headerAlign:"flex-start",hasBorderBottom:!1}},o={args:{}},e={args:{shouldInvertTitles:!0}},r={args:{shouldInvertButtons:!0}},n={args:{isLoading:!0}},s={args:{renderHeaderButtonComponent:()=>v.jsx(D,{text:"Custom Button",variant:"outline",onClick:()=>console.log("Custom button click")})}};var a,c,d;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {}
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var l,p,u;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    shouldInvertTitles: true
  }
}`,...(u=(p=e.parameters)==null?void 0:p.docs)==null?void 0:u.source}}};var m,h,y;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    shouldInvertButtons: true
  }
}`,...(y=(h=r.parameters)==null?void 0:h.docs)==null?void 0:y.source}}};var b,g,f;n.parameters={...n.parameters,docs:{...(b=n.parameters)==null?void 0:b.docs,source:{originalSource:`{
  args: {
    isLoading: true
  }
}`,...(f=(g=n.parameters)==null?void 0:g.docs)==null?void 0:f.source}}};var B,x,C;s.parameters={...s.parameters,docs:{...(B=s.parameters)==null?void 0:B.docs,source:{originalSource:`{
  args: {
    renderHeaderButtonComponent: () => <ButtonComponent text="Custom Button" variant="outline" onClick={() => console.log('Custom button click')} />
  }
}`,...(C=(x=s.parameters)==null?void 0:x.docs)==null?void 0:C.source}}};const et=["DefaultHeader","InvertedTitles","InvertedButtons","LoadingState","WithCustomButtons"];export{o as DefaultHeader,r as InvertedButtons,e as InvertedTitles,n as LoadingState,s as WithCustomButtons,et as __namedExportsOrder,ot as default};
