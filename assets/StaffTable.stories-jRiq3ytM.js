import{j as o}from"./factory-BYdAncit.js";import{B as m}from"./index-B5h4HgXl.js";import{S as n}from"./StaffTable-rMOStUUG.js";import"./index-BP8_t0zE.js";import"./index-BVEwUaSm.js";import"./index-CdXB_vz_.js";import"./JobFormContentHeader-CpwVJsvY.js";import"./iconBase-tVazycLF.js";import"./index-B98Pt2jl.js";import"./styled-components.browser.esm-BzjHiQVu.js";import"./theme-CBi4L4pb.js";import"./Button-BmZH4clo.js";import"./polymorphic-factory-BBVriERq.js";import"./Loader-DYJrnaLT.js";import"./Transition-BCGcMdvv.js";import"./UnstyledButton-BYy9qxQd.js";import"./Input-E5qBdqnX.js";import"./index-DHgPtaHi.js";import"./Input-DkGv-MlU.js";import"./use-id-Cc9noPIB.js";import"./random-id-CCVmTau8.js";import"./Flex-DB8_OMZA.js";import"./Popover-jsiwsZQx.js";import"./Popover-KLkcXoeL.js";import"./OptionalPortal-pP32-1nJ.js";import"./use-merged-ref-Zmja8g2s.js";import"./DirectionProvider-Bt7M7wKl.js";import"./use-floating-auto-update-zUEi8vAS.js";import"./create-safe-context-cIFFkskc.js";import"./FocusTrap-BWeZ3v7v.js";import"./use-uncontrolled-D1uLaDoI.js";import"./Group-DAYBdM2T.js";import"./Title-BF1HBFC0.js";import"./StaffTableData-AU92TGBw.js";import"./auth-ZgXK2BXz.js";import"./httpClient-DV4VuV9q.js";import"./tslib.es6-Ytcc2UEA.js";import"./date-DtSnoD3t.js";import"./constructFrom-rJN6zrQ_.js";import"./geocoding-9DEqa3JR.js";import"./Table-CPynlTVo.js";import"./index-D1m89S_o.js";import"./ScrollArea-CIJALQu3.js";import"./get-auto-contrast-value-DNc6ItoQ.js";import"./CheckIcon-DIBRqQfE.js";import"./Skeleton-DfZH9prR.js";import"./Tooltip-Bd5wOlBI.js";const rt={title:"Components/StaffTable",component:n,tags:["autodocs"],argTypes:{onCancel:{action:"cancelled",description:"Callback when the cancel button is clicked"},onSelect:{action:"selected",description:"Callback when staffs are selected"},selectedStaffIds:{description:"Array of selected staff members."}},args:{selectedStaffIds:[]},decorators:[t=>o.jsx(m,{children:o.jsx(t,{})})]},e={render:t=>{const c=i=>{console.log("staffs selected: ",i)};return o.jsx(n,{onCancel:t.onCancel,onSelect:c,selectedStaffIds:t.selectedStaffIds})},args:{selectedStaffIds:[],onCancel:()=>console.log("canceled")}};var r,s,a;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: args => {
    const handleSelectStaffs = (staffs: IStaffTable[]) => {
      console.log('staffs selected: ', staffs);
    };
    return <StaffTable onCancel={args.onCancel} onSelect={handleSelectStaffs} selectedStaffIds={args.selectedStaffIds} />;
  },
  args: {
    selectedStaffIds: [],
    onCancel: () => console.log('canceled')
  }
}`,...(a=(s=e.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const st=["DefaultTable"];export{e as DefaultTable,st as __namedExportsOrder,rt as default};
