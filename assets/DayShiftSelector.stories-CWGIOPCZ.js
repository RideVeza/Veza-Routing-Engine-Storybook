import{j as r}from"./jsx-runtime-CexXSJP5.js";import{r as a}from"./index-BP8_t0zE.js";import{D as p}from"./DayShiftSelector-xfVhayJK.js";import{J as h}from"./jobs-DhiDD4xb.js";import{m as S}from"./newJobResult-BH-vBpQD.js";import{t as u}from"./theme-DV-fQgRe.js";import{d as y}from"./routes-Ss6aDr-t.js";import"./styled-components.browser.esm-Dx2qpfAi.js";import"./IconComponent-BLxFDGI_.js";import"./index-DDyY_0rn.js";import"./iconBase-tVazycLF.js";import"./index-B98Pt2jl.js";import"./index-L2PmcK6x.js";import"./index-DUW3t7VM.js";import"./index-DhrrqPsw.js";import"./index-DWJGBGB2.js";import"./index-CYZFw_ar.js";import"./SelectInput-Cmdq-hxt.js";import"./Select-CgpR6YNG.js";import"./use-resolved-styles-api-9Hl1n5Yq.js";import"./factory-Cmy58O58.js";import"./default-theme-BUmQqxa3.js";import"./get-size-ZIjN6hcg.js";import"./create-vars-resolver-BkjTnGuP.js";import"./Popover-2oXiTh42.js";import"./OptionalPortal-Dz0ZbQ5R.js";import"./index-DJkmxc1E.js";import"./use-isomorphic-effect-BPjV9wAK.js";import"./use-merged-ref-DIizHiiB.js";import"./DirectionProvider-DOfDrEPm.js";import"./use-floating-auto-update-DNpjfyuK.js";import"./use-reduced-motion-BEzOJ-bM.js";import"./create-safe-context-DdvLfAHk.js";import"./FocusTrap-Qzhi2iHh.js";import"./is-element-CqW86lAY.js";import"./random-id-CCVmTau8.js";import"./Transition-1eDnA5u2.js";import"./use-uncontrolled-D1uLaDoI.js";import"./use-id-B6kcI9zl.js";import"./CloseButton-Bf40-Csk.js";import"./polymorphic-factory-DpGZ7QIF.js";import"./UnstyledButton-Bp_jImnG.js";import"./Input-2PvRR_UE.js";import"./ScrollArea-D4tNmDXS.js";import"./InputBase-Dxa36rRv.js";import"./WeekdaySelector-BDND3AmC.js";import"./Flex-DfchtKyW.js";import"./Button-DQolzjlr.js";import"./Loader-I3UIFO-P.js";const i=S.routes,l=i.map(t=>({...t,formattedRouteStopsByDay:t.formattedRouteStopsByDay.filter(o=>o.shift==="AM")})),ht={title:"Components/DayShiftSelector",component:p,parameters:{layout:"centered",backgrounds:{default:"light",values:[{name:"light",value:u.colors.gray[0]}]}},tags:["autodocs"],argTypes:{routes:{description:"Routes data for the week, filtered by selected shift and day."},activeDay:{control:{type:"select",options:y},description:"The currently active day of the week."},routesBySelectedShift:{description:"Routes data filtered by the selected shift."},setActiveDay:{action:"setActiveDay",description:"Callback function triggered when the active day is changed."},setActiveShift:{action:"setActiveShift",description:"Callback function triggered when the shift is changed."}},args:{routes:i,routesBySelectedShift:l,activeDay:"Monday"}},e={render:t=>{const[o,n]=a.useState("Monday"),[d,f]=a.useState(h.AM);return console.log("activeShift: ",d),r.jsx("div",{style:{width:"400px"},children:r.jsx(p,{routes:t.routes,activeDay:o,routesBySelectedShift:t.routesBySelectedShift,setActiveDay:n,setActiveShift:f})})},args:{routesBySelectedShift:i}};var s,c,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`{
  render: args => {
    const [activeDay, setActiveDay] = useState('Monday');
    const [activeShift, setActiveShift] = useState<string>(JobShiftEnum.AM);
    console.log('activeShift: ', activeShift);
    return <div style={{
      width: '400px'
    }}>\r
        <DayShiftSelector routes={args.routes} activeDay={activeDay} routesBySelectedShift={args.routesBySelectedShift} setActiveDay={setActiveDay} setActiveShift={setActiveShift} />\r
      </div>;
  },
  args: {
    routesBySelectedShift: mockRoutesData
  }
}`,...(m=(c=e.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};const St=["DefaultDayShiftSelector"];export{e as DefaultDayShiftSelector,St as __namedExportsOrder,ht as default};
